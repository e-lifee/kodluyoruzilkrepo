using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'migratoryBirds' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static int migratoryBirds(List<int> arr)
    {
         int n1=0,n2=0,n3=0,n4=0,n5=0;
         for(int i=0;i<arr.Count;i++){
             if(arr[i]==1){
                 n1++;
             }
             else if(arr[i]==2){
                 n2++;
             }
             else if(arr[i]==3){
                 n3++;
             }
             else if(arr[i]==4){
                 n4++;
             }
             else if(arr[i]==5){
                 n5++;
             }
                     
         }
         
         List<int> numbers=new List<int>();
         numbers.Add(n1);
         numbers.Add(n2);
         numbers.Add(n3);
         numbers.Add(n4);
         numbers.Add(n5);
         
         return numbers.IndexOf(numbers.Max())+1;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        /*TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);*/

        int arrCount = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();

        int result = Result.migratoryBirds(arr);
        Console.WriteLine(result);
        /*textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();*/
    }
}
